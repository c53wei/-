============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-7.4.3, pluggy-1.3.0
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/clarewei/Documents/BME/4A/BME411â€“Numerical Optimization /A Star
plugins: benchmark-4.0.0
collected 1 item

test.py F                                                                [100%]

=================================== FAILURES ===================================
__________________________________ test_astar __________________________________

benchmark = <pytest_benchmark.fixture.BenchmarkFixture object at 0x10423bcd0>

    def test_astar(benchmark):
    
        adjacency_list = {
            0: [(1, 4), (2, 2), (5, 4)],
            1: [(0, 4)],
            2: [(4, 1), (6, 5)],
            3: [(4, 3), (5, 2)],
            4: [(3, 3), (2, 1)],
            5: [(3, 2), (0, 4)],
            6: [(2, 5)]
        }
    
        graph1 = Graph(adjacency_list)
    
        #shortest_path, distance = graph1.a_star_algorithm(0, 4)
        #print(f'Shortest Path: {shortest_path}\n')
        #print(f'Distance: {distance}')
    
>       benchmark(Graph.a_star_algorithm, graph1, start_vertex=0, stop_node=4)

test.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.9/site-packages/pytest_benchmark/fixture.py:125: in __call__
    return self._raw(function_to_benchmark, *args, **kwargs)
venv/lib/python3.9/site-packages/pytest_benchmark/fixture.py:147: in _raw
    duration, iterations, loops_range = self._calibrate_timer(runner)
venv/lib/python3.9/site-packages/pytest_benchmark/fixture.py:275: in _calibrate_timer
    duration = runner(loops_range)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

loops_range = range(0, 1), timer = <built-in function perf_counter>

    def runner(loops_range, timer=self._timer):
        gc_enabled = gc.isenabled()
        if self._disable_gc:
            gc.disable()
        tracer = sys.gettrace()
        sys.settrace(None)
        try:
            if loops_range:
                start = timer()
                for _ in loops_range:
>                   function_to_benchmark(*args, **kwargs)
E                   TypeError: a_star_algorithm() got an unexpected keyword argument 'start_vertex'

venv/lib/python3.9/site-packages/pytest_benchmark/fixture.py:90: TypeError
=========================== short test summary info ============================
FAILED test.py::test_astar - TypeError: a_star_algorithm() got an unexpected ...
============================== 1 failed in 1.08s ===============================
